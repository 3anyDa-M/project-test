


    # docker-compose
    version: '3.8'
    services:
      zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
          - "2181:2181"

      kafka:
        image: wurstmeister/kafka
        container_name: kafka
        ports:
          - "9092:9092"
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL

          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          ALLOW_PLAINTEXT_LISTENER: "yes"
        depends_on:
          - zookeeper

      akhq:
        image: tchiotludo/akhq:latest
        container_name: akhq
        depends_on:
          - kafka
        ports:
          - "8080:8080"
        environment:
          - AKHQ_CONFIGURATION_FILE=/app/application.yml
        volumes:
          - ./akhq-application.yml:/app/application.yml

    # redis
      redis:
        container_name: redis
        image: redis:latest
        ports:
          - "6379:6379"
        environment:
          - "REDIS_PASSWORD=redis"
          - "REDIS_USER=user"
          - "REDIS_USER_PASSWORD=password"


      postgres:
        build: .
        container_name: my_pg
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
        ports:
          - "5432:5432"
        volumes:
          - postgres_data:/var/lib/postgresql/data
    volumes:
      postgres_data: